/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class socket_Socket */

#ifndef _Included_socket_Socket
#define _Included_socket_Socket
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     socket_Socket
 * Method:    createSocket
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_createSocket
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     socket_Socket
 * Method:    recvfrom
 * Signature: (IIJI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_recvfrom
  (JNIEnv *, jobject, jint, jint, jlong, jint);

/*
 * Class:     socket_Socket
 * Method:    bind
 * Signature: (IJ)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_bind
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     socket_Socket
 * Method:    connect
 * Signature: (IJ)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_connect
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     socket_Socket
 * Method:    listen
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_listen
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     socket_Socket
 * Method:    accept
 * Signature: (IJ)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_accept
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     socket_Socket
 * Method:    send
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_send
  (JNIEnv *, jobject, jint, jbyteArray, jint);

/*
 * Class:     socket_Socket
 * Method:    sendto
 * Signature: (IJ[BI)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_sendto
  (JNIEnv *, jobject, jint, jlong, jbyteArray, jint);

/*
 * Class:     socket_Socket
 * Method:    close
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_close
  (JNIEnv *, jobject, jint);

/*
 * Class:     socket_Socket
 * Method:    shutdown
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_shutdown
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     socket_Socket
 * Method:    setsockopt
 * Signature: (IIII)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_setsockopt
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     socket_Socket
 * Method:    recv
 * Signature: (III)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_recv
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     socket_Socket
 * Method:    ioctl
 * Signature: (IIJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_ioctl
  (JNIEnv *, jobject, jint, jint, jlong);

/*
 * Class:     socket_Socket
 * Method:    getsockname
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_getsockname
  (JNIEnv *, jobject, jint);

/*
 * Class:     socket_Socket
 * Method:    if_nametoindex
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_if_1nametoindex
  (JNIEnv *, jclass, jstring);

/*
 * Class:     socket_Socket
 * Method:    htons
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_htons
  (JNIEnv *, jclass, jint);

/*
 * Class:     socket_Socket
 * Method:    htonl
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_socket_Socket_htonl
  (JNIEnv *, jclass, jlong);

/*
 * Class:     socket_Socket
 * Method:    ntohs
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_socket_Socket_ntohs
  (JNIEnv *, jclass, jint);

/*
 * Class:     socket_Socket
 * Method:    ntohl
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_socket_Socket_ntohl
  (JNIEnv *, jclass, jlong);

/*
 * Class:     socket_Socket
 * Method:    inet_ntoa
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_socket_Socket_inet_1ntoa
  (JNIEnv *, jclass, jlong);

/*
 * Class:     socket_Socket
 * Method:    inet_addr
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_socket_Socket_inet_1addr
  (JNIEnv *, jclass, jstring);

/*
 * Class:     socket_Socket
 * Method:    inet_aton
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_inet_1aton
  (JNIEnv *, jclass, jstring);

/*
 * Class:     socket_Socket
 * Method:    inet_network
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_socket_Socket_inet_1network
  (JNIEnv *, jclass, jstring);

/*
 * Class:     socket_Socket
 * Method:    inet_makeaddr
 * Signature: (II)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_inet_1makeaddr
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     socket_Socket
 * Method:    gethostbyname
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_gethostbyname
  (JNIEnv *, jclass, jstring);

/*
 * Class:     socket_Socket
 * Method:    gethostbyaddr
 * Signature: (I[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_gethostbyaddr
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     socket_Socket
 * Method:    inet_pton
 * Signature: (ILjava/lang/String;I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_inet_1pton
  (JNIEnv *, jclass, jint, jstring, jint);

/*
 * Class:     socket_Socket
 * Method:    getaddrinfo
 * Signature: (Ljava/lang/String;Ljava/lang/String;[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_socket_Socket_getaddrinfo
  (JNIEnv *, jclass, jstring, jstring, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
